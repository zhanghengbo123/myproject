<?xml version="1.0" encoding="UTF-8"?>    
<beans xmlns="http://www.springframework.org/schema/beans"    
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"   
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd">

	<!-- 自定义Realm -->
	<bean class="core.admin.pro.realm.AuthLoginRealm" id="myRealm"/>

	<!-- 会话管理器 -->
	<bean id="sessionManager" class="org.apache.shiro.session.mgt.DefaultSessionManager">
		<property name="sessionValidationSchedulerEnabled" value="false"/>
	</bean>

	<!-- 安全管理器 -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="realm" ref="myRealm"/>
		<!-- <property name="subjectDAO.sessionStorageEvaluator.sessionStorageEnabled" value="false"/>
		<property name="subjectFactory" ref="subjectFactory"/>
		<property name="sessionManager" ref="sessionManager"/> -->
	</bean>

	<!-- 相当于调用 SecurityUtils.setSecurityManager(securityManager) -->
	<bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="staticMethod"
				  value="org.apache.shiro.SecurityUtils.setSecurityManager"/>
		<property name="arguments" ref="securityManager"/>
	</bean>

	<bean id="statelessAuthcFilter"
		  class="core.admin.pro.filter.StatelessAuthcFilter"/>

	<!-- Shiro 的 Web 过滤器 -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
	<property name="securityManager" ref="securityManager"/>
	<property name="filters">
		<map>
			<entry key="statelessAuthc" value-ref="statelessAuthcFilter"/>
			</map>
		</property>

		<property name="filterChainDefinitions">
			<value>
				/logout = logout
				/user/login=anon
				login=anon
				/json/paymentBill/pdf/**=anon
				/transport/index=statelessAuthc
				/json/**=statelessAuthc
			</value>
		</property>
	</bean>

	<!-- 保证实现了Shiro内部lifecycle函数的bean执行 -->
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>
	<!-- 开启Shiro注解 -->
	<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor"/>
	<bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
		<property name="securityManager" ref="securityManager"/>
	</bean>
</beans>